<?xml version="1.0" encoding="ISO-8859-15"?>
<!--
  Copyright 2002-2004 The Apache Software Foundation

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V2.0//EN" "http://forrest.apache.org/dtd/document-v20.dtd">
<document> 
  <header> 
    <title>Database support in DdlUtils</title> 
  </header> 
  <body> 
    <p>
      This document gives a list of supported databases including some details on the level
      of support, e.g. mapping between JDBC types and SQL types, supported options for
      the individual databases, etc.
    </p>
    <p>
      The main source of information about JDBC is the <a href="ext:java/jdbc/spec">JDBC Specification</a>,
      currently for JDBC version 3. General information about the JDBC datatypes can also be found in
      <a href="ext:java/jdbc/guide/types">Chapter 9: Mapping SQL and Java Types</a> of the
      <a href="ext:java/jdbc/guide">JDBC Technology Guide: Getting Started</a>. Please also note
      that some JDBC types are only available in recent versions of the Java platform, e.g.
      the <code>BOOLEAN</code> type is only available since J2SE version 1.4. These will be
      usable with DdlUtils only if you're running the respective Java version or a newer one.
    </p>
    <p>
      Here is a short summary of the information about the JDBC data types:
    </p>
    <table>
      <tr>
        <th>JDBC data type</th>
        <th>Required minimum limits (range or size)</th>
        <th>Comments</th>
      </tr>
      <tr>
        <td>ARRAY</td>
        <td></td>
        <td>Represents an array</td>
      </tr>
      <tr>
        <td>BIGINT</td>
        <td>-9223372036854775808 to 9223372036854775807</td>
        <td>64 bit signed integer</td>
      </tr>
      <tr>
        <td>BINARY</td>
        <td>254 bytes</td>
        <td></td>
      </tr>
      <tr>
        <td>BIT</td>
        <td>0, 1</td>
        <td></td>
      </tr>
      <tr>
        <td>BLOB</td>
        <td></td>
        <td></td>
      </tr>
      <tr>
        <td>BOOLEAN</td>
        <td>true, false</td>
        <td>Java 1.4 and above</td>
      </tr>
      <tr>
        <td>CHAR</td>
        <td>254 (8-bit characters)</td>
        <td></td>
      </tr>
      <tr>
        <td>CLOB</td>
        <td></td>
        <td></td>
      </tr>
      <tr>
        <td>DATALINK</td>
        <td></td>
        <td>Java 1.4 and above. References a file outside of the database but that
            is managed by it. Maps to <code>java.net.URL</code></td>
      </tr>
      <tr>
        <td>DATE</td>
        <td>year, month, day</td>
        <td></td>
      </tr>
      <tr>
        <td>DECIMAL</td>
        <td>15 for precision (total number of digits) and for scale (number of
            digits after the decimal point)</td>
        <td></td>
      </tr>
      <tr>
        <td>DISTINCT</td>
        <td></td>
        <td>Represents a distinct value, totally implementation dependent</td>
      </tr>
      <tr>
        <td>DOUBLE</td>
        <td>15 bits of mantissa (fractional part)</td>
        <td></td>
      </tr>
      <tr>
        <td>FLOAT</td>
        <td>15 bits of mantissa (fractional part)</td>
        <td></td>
      </tr>
      <tr>
        <td>INTEGER</td>
        <td>-2147483648 to 2147483647</td>
        <td>32 bit signed integer</td>
      </tr>
      <tr>
        <td>JAVA_OBJECT</td>
        <td></td>
        <td>Represents an java object, usually a serialized one</td>
      </tr>
      <tr>
        <td>LONGVARBINARY</td>
        <td>1 GB</td>
        <td></td>
      </tr>
      <tr>
        <td>LONGVARCHAR</td>
        <td>1 GB (8-bit characters)</td>
        <td></td>
      </tr>
      <tr>
        <td>NULL</td>
        <td></td>
        <td>Is not specified in detail</td>
      </tr>
      <tr>
        <td>NUMERIC</td>
        <td>15 for precision (total number of digits) and for scale (number of digits
            after the decimal point)</td>
        <td></td>
      </tr>
      <tr>
        <td>OTHER</td>
        <td></td>
        <td>Entirely database-specific type</td>
      </tr>
      <tr>
        <td>REAL</td>
        <td>7 bits of mantissa (fractional part)</td>
        <td></td>
      </tr>
      <tr>
        <td>REF</td>
        <td></td>
        <td>Represents a reference to an instance of a SQL structured type. Maps to
            <code>java.sql.Ref</code>.</td>
      </tr>
      <tr>
        <td>SMALLINT</td>
        <td>-32768 to 32767</td>
        <td>16 bit signed integer</td>
      </tr>
      <tr>
        <td>STRUCT</td>
        <td></td>
        <td>Represents a structured type, usually created via CREATE TYPE. Maps to
            <code>java.sql.Struct</code>.</td>
      </tr>
      <tr>
        <td>TIME</td>
        <td>hours, minutes, seconds</td>
        <td></td>
      </tr>
      <tr>
        <td>TIMESTAMP</td>
        <td>year, month, day, hours, minutes, seconds, nanoseconds</td>
        <td></td>
      </tr>
      <tr>
        <td>TINYINT</td>
        <td>-128 to 127 (8 bit signed) or 0 to 254 (8 bit unsigned)</td>
        <td>8 bit signed or unsigned integer</td>
      </tr>
      <tr>
        <td>VARBINARY</td>
        <td>254 bytes</td>
        <td></td>
      </tr>
      <tr>
        <td>VARCHAR</td>
        <td>254 bytes (8-bit characters)</td>
        <td></td>
      </tr>
    </table>
    <note>
      This is currently somewhat incomplete, especially in regard to which versions of the
      individual databases are supported resp. tested.
    </note>
    <section>
      <title>Axion</title>
      <p>
        Info about the datatypes supported by <a href="ext:axion">Axion</a> can be found
        <a href="ext:axion/datatypes">here</a>.
      </p>
      <table>
        <tr>
          <td>DdlUtils explicitly specifies <code>NULL</code> as default value</td>
          <td>no</td>
        </tr>
        <tr>
          <td>DdlUtils uses primary key definitions embedded in the table definition</td>
          <td>yes</td>
        </tr>
        <tr>
          <td>DdlUtils uses foreign key definitions embedded in the table definition</td>
          <td>no</td>
        </tr>
        <tr>
          <td>DdlUtils uses indices embedded in the table definition</td>
          <td>yes</td>
        </tr>
        <tr>
          <td>DdlUtils uses ALTER TABLE statements for dropping tables </td>
          <td>no</td>
        </tr>
        <tr>
          <td>Maximum identifier length</td>
          <td>unlimited</td>
        </tr>
        <tr>
          <td>Quote character</td>
          <td>Single quote char <code>'</code></td>
        </tr>
        <tr>
          <td>Comment format</td>
          <td>Single line starting with <code>--</code></td>
        </tr>
      </table>
      <table>
        <tr>
          <th>JDBC Type</th>
          <th>Database Type</th>
          <th>Additional comments</th>
        </tr>
        <tr>
          <td>ARRAY</td>
          <td><em>BLOB</em></td>
          <td>Not natively supported by Axion</td>
        </tr>
        <tr>
          <td>BIGINT</td>
          <td>LONG (Axion CVS head has support for BIGINT)</td>
          <td></td>
        </tr>
        <tr>
          <td>BINARY</td>
          <td>VARBINARY</td>
          <td></td>
        </tr>
        <tr>
          <td>BIT</td>
          <td>BOOLEAN</td>
          <td></td>
        </tr>
        <tr>
          <td>BLOB</td>
          <td>BLOB</td>
          <td></td>
        </tr>
        <tr>
          <td>BOOLEAN</td>
          <td>BOOLEAN</td>
          <td></td>
        </tr>
        <tr>
          <td>CHAR</td>
          <td>CHAR</td>
          <td></td>
        </tr>
        <tr>
          <td>CLOB</td>
          <td>CLOB</td>
          <td></td>
        </tr>
        <tr>
          <td>DATALINK</td>
          <td><em>VARBINARY</em></td>
          <td>Not natively supported by Axion</td>
        </tr>
        <tr>
          <td>DATE</td>
          <td>DATE</td>
          <td>Axion handles DATE, TIME the same as TIMESTAMP</td>
        </tr>
        <tr>
          <td>DECIMAL</td>
          <td>NUMBER</td>
          <td><code>scale</code> is currently fixed to 2 (though a different one can be specified)</td>
        </tr>
        <tr>
          <td>DISTINCT</td>
          <td><em>VARBINARY</em></td>
          <td>Not natively supported by Axion</td>
        </tr>
        <tr>
          <td>DOUBLE</td>
          <td>FLOAT</td>
          <td></td>
        </tr>
        <tr>
          <td>FLOAT</td>
          <td>FLOAT</td>
          <td></td>
        </tr>
        <tr>
          <td>INTEGER</td>
          <td>INTEGER</td>
          <td></td>
        </tr>
        <tr>
          <td>JAVA_OBJECT</td>
          <td>JAVA_OBJECT</td>
          <td></td>
        </tr>
        <tr>
          <td>LONGVARBINARY</td>
          <td>VARBINARY</td>
          <td></td>
        </tr>
        <tr>
          <td>LONGVARCHAR</td>
          <td>VARCHAR</td>
          <td></td>
        </tr>
        <tr>
          <td>NULL</td>
          <td><em>VARBINARY</em></td>
          <td>Not natively supported by Axion</td>
        </tr>
        <tr>
          <td>NUMERIC</td>
          <td>NUMBER</td>
          <td><code>scale</code> is currently fixed to 2 (though a different one can be specified)</td>
        </tr>
        <tr>
          <td>OTHER</td>
          <td><em>BLOB</em></td>
          <td>Not natively supported by Axion</td>
        </tr>
        <tr>
          <td>REAL</td>
          <td>FLOAT</td>
          <td></td>
        </tr>
        <tr>
          <td>REF</td>
          <td><em>VARBINARY</em></td>
          <td>Not natively supported by Axion</td>
        </tr>
        <tr>
          <td>SMALLINT</td>
          <td>SHORT</td>
          <td></td>
        </tr>
        <tr>
          <td>STRUCT</td>
          <td><em>VARBINARY</em></td>
          <td>Not natively supported by Axion</td>
        </tr>
        <tr>
          <td>TIME</td>
          <td>TIME</td>
          <td>Axion handles DATE, TIME the same as TIMESTAMP</td>
        </tr>
        <tr>
          <td>TIMESTAMP</td>
          <td>TIMESTAMP</td>
          <td></td>
        </tr>
        <tr>
          <td>TINYINT</td>
          <td>SHORT</td>
          <td></td>
        </tr>
        <tr>
          <td>VARBINARY</td>
          <td>VARBINARY</td>
          <td></td>
        </tr>
        <tr>
          <td>VARCHAR</td>
          <td>VARCHAR</td>
          <td></td>
        </tr>
      </table>
    </section>
    <section>
      <title>Cloudscape/Derby</title>
      <p>
        DdlUtils supports <a href="ext:cloudscape">Cloudscape</a> version 10.0. Information about the
        SQL elements and datatypes of Cloudscape is found in the
        <a href="ext:cloudscape/manual">IBM Cloudscape Reference Manual</a>.
      </p>
      <p>
        The <a href="ext:derby">Apache Derby</a> project is based upon Cloudscape version 10, which IBM
        contributed to Apache in 2004. The SQL syntax and datatypes supported by Derby are described in
        the Datatypes section in the <a href="ext:derby/manual">Reference Manual</a>.
      </p>
      <table>
        <tr>
          <td>DdlUtils explicitly specifies <code>NULL</code> as default value</td>
          <td>no</td>
        </tr>
        <tr>
          <td>DdlUtils uses primary key definitions embedded in the table definition</td>
          <td>yes</td>
        </tr>
        <tr>
          <td>DdlUtils uses foreign key definitions embedded in the table definition</td>
          <td>no</td>
        </tr>
        <tr>
          <td>DdlUtils uses indices embedded in the table definition</td>
          <td>no</td>
        </tr>
        <tr>
          <td>DdlUtils uses ALTER TABLE statements for dropping tables </td>
          <td>no</td>
        </tr>
        <tr>
          <td>Maximum identifier length</td>
          <td>128</td>
        </tr>
        <tr>
          <td>Quote character</td>
          <td>Single quote char <code>'</code></td>
        </tr>
        <tr>
          <td>Comment format</td>
          <td>Single line starting with <code>--</code></td>
        </tr>
      </table>
      <table>
        <tr>
          <th>JDBC Type</th>
          <th>Database Type</th>
          <th>Additional comments</th>
        </tr>
        <tr>
          <td>ARRAY</td>
          <td><em>BLOB</em></td>
          <td>Not natively supported by Cloudscape</td>
        </tr>
        <tr>
          <td>BIGINT</td>
          <td>BIGINT</td>
          <td></td>
        </tr>
        <tr>
          <td>BINARY</td>
          <td>CHAR(n) FOR BIT DATA</td>
          <td></td>
        </tr>
        <tr>
          <td>BIT</td>
          <td>CHAR FOR BIT DATA</td>
          <td>Cloudscape has no native boolean type</td>
        </tr>
        <tr>
          <td>BLOB</td>
          <td>BLOB</td>
          <td></td>
        </tr>
        <tr>
          <td>BOOLEAN</td>
          <td>CHAR FOR BIT DATA</td>
          <td>Cloudscape has no native boolean type</td>
        </tr>
        <tr>
          <td>CHAR</td>
          <td>CHAR</td>
          <td></td>
        </tr>
        <tr>
          <td>CLOB</td>
          <td>CLOB</td>
          <td></td>
        </tr>
        <tr>
          <td>DATALINK</td>
          <td><em>LONG VARCHAR FOR BIT DATA</em></td>
          <td>Not natively supported by Cloudscape</td>
        </tr>
        <tr>
          <td>DATE</td>
          <td>DATE</td>
          <td></td>
        </tr>
        <tr>
          <td>DECIMAL</td>
          <td>DECIMAL</td>
          <td></td>
        </tr>
        <tr>
          <td>DISTINCT</td>
          <td><em>BLOB</em></td>
          <td>Not natively supported by Cloudscape</td>
        </tr>
        <tr>
          <td>DOUBLE</td>
          <td>DOUBLE PRECISION</td>
          <td></td>
        </tr>
        <tr>
          <td>FLOAT</td>
          <td>DOUBLE PRECISION</td>
          <td></td>
        </tr>
        <tr>
          <td>INTEGER</td>
          <td>INTEGER</td>
          <td></td>
        </tr>
        <tr>
          <td>JAVA_OBJECT</td>
          <td><em>BLOB</em></td>
          <td>Not natively supported by Cloudscape</td>
        </tr>
        <tr>
          <td>LONGVARBINARY</td>
          <td>LONG VARCHAR FOR BIT DATA</td>
          <td></td>
        </tr>
        <tr>
          <td>LONGVARCHAR</td>
          <td>LONG VARCHAR</td>
          <td></td>
        </tr>
        <tr>
          <td>NULL</td>
          <td><em>LONG VARCHAR FOR BIT DATA</em></td>
          <td>Not natively supported by Cloudscape</td>
        </tr>
        <tr>
          <td>NUMERIC</td>
          <td>NUMERIC</td>
          <td></td>
        </tr>
        <tr>
          <td>OTHER</td>
          <td><em>BLOB</em></td>
          <td>Not natively supported by Cloudscape</td>
        </tr>
        <tr>
          <td>REAL</td>
          <td>REAL</td>
          <td></td>
        </tr>
        <tr>
          <td>REF</td>
          <td><em>LONG VARCHAR FOR BIT DATA</em></td>
          <td>Not natively supported by Cloudscape</td>
        </tr>
        <tr>
          <td>SMALLINT</td>
          <td>SMALLINT</td>
          <td></td>
        </tr>
        <tr>
          <td>STRUCT</td>
          <td><em>BLOB</em></td>
          <td>Not natively supported by Cloudscape</td>
        </tr>
        <tr>
          <td>TIME</td>
          <td>TIME</td>
          <td></td>
        </tr>
        <tr>
          <td>TIMESTAMP</td>
          <td>TIMESTAMP</td>
          <td></td>
        </tr>
        <tr>
          <td>TINYINT</td>
          <td>SMALLINT</td>
          <td></td>
        </tr>
        <tr>
          <td>VARBINARY</td>
          <td>VARCHAR(n) FOR BIT DATA</td>
          <td></td>
        </tr>
        <tr>
          <td>VARCHAR</td>
          <td>VARCHAR</td>
          <td></td>
        </tr>
      </table>
    </section>
    <section>
      <title>DB 2</title>
      <p>
        The DdlUtils support for <a href="ext:db2">IBM DB2</a> is based upon version <strong>7</strong>.
        The datatypes and SQL elements in DB2 are described in the
        <a href="ext:db2/manual">DB2 SQL Reference V7</a>. Some specifics related to the JDBC driver and
        suggested typemappings can also be found <a href="ext:db2/jdbc-mappings">here</a>.
      </p>
      <table>
        <tr>
          <td>DdlUtils explicitly specifies <code>NULL</code> as default value</td>
          <td>no</td>
        </tr>
        <tr>
          <td>DdlUtils uses primary key definitions embedded in the table definition</td>
          <td>yes</td>
        </tr>
        <tr>
          <td>DdlUtils uses foreign key definitions embedded in the table definition</td>
          <td>no</td>
        </tr>
        <tr>
          <td>DdlUtils uses indices embedded in the table definition</td>
          <td>no</td>
        </tr>
        <tr>
          <td>DdlUtils uses ALTER TABLE statements for dropping tables </td>
          <td>no</td>
        </tr>
        <tr>
          <td>Maximum identifier length</td>
          <td>18</td>
        </tr>
        <tr>
          <td>Quote character</td>
          <td>Single quote char <code>'</code></td>
        </tr>
        <tr>
          <td>Comment format</td>
          <td>Single line starting with <code>--</code></td>
        </tr>
      </table>
      <table>
        <tr>
          <th>JDBC Type</th>
          <th>Database Type</th>
          <th>Additional comments</th>
        </tr>
        <tr>
          <td>ARRAY</td>
          <td><em>BLOB</em></td>
          <td>Not natively supported by DB2</td>
        </tr>
        <tr>
          <td>BIGINT</td>
          <td>BIGINT</td>
          <td></td>
        </tr>
        <tr>
          <td>BINARY</td>
          <td>CHAR(n) FOR BIT DATA</td>
          <td></td>
        </tr>
        <tr>
          <td>BIT</td>
          <td>SMALLINT</td>
          <td>DB2 has no native boolean type</td>
        </tr>
        <tr>
          <td>BLOB</td>
          <td>BLOB</td>
          <td></td>
        </tr>
        <tr>
          <td>BOOLEAN</td>
          <td>SMALLINT</td>
          <td>DB2 has no native boolean type</td>
        </tr>
        <tr>
          <td>CHAR</td>
          <td>CHAR</td>
          <td></td>
        </tr>
        <tr>
          <td>CLOB</td>
          <td>CLOB</td>
          <td></td>
        </tr>
        <tr>
          <td>DATALINK</td>
          <td>DATALINK</td>
          <td></td>
        </tr>
        <tr>
          <td>DATE</td>
          <td>DATE</td>
          <td></td>
        </tr>
        <tr>
          <td>DECIMAL</td>
          <td>DECIMAL</td>
          <td></td>
        </tr>
        <tr>
          <td>DISTINCT</td>
          <td>DISTINCT</td>
          <td></td>
        </tr>
        <tr>
          <td>DOUBLE</td>
          <td>DOUBLE</td>
          <td></td>
        </tr>
        <tr>
          <td>FLOAT</td>
          <td>REAL</td>
          <td></td>
        </tr>
        <tr>
          <td>INTEGER</td>
          <td>INTEGER</td>
          <td></td>
        </tr>
        <tr>
          <td>JAVA_OBJECT</td>
          <td><em>BLOB</em></td>
          <td>Not natively supported by DB2</td>
        </tr>
        <tr>
          <td>LONGVARBINARY</td>
          <td>LONG VARCHAR FOR BIT DATA</td>
          <td></td>
        </tr>
        <tr>
          <td>LONGVARCHAR</td>
          <td>LONG VARCHAR</td>
          <td></td>
        </tr>
        <tr>
          <td>NULL</td>
          <td><em>LONG VARCHAR FOR BIT DATA</em></td>
          <td>Not natively supported by DB2</td>
        </tr>
        <tr>
          <td>NUMERIC</td>
          <td>NUMERIC</td>
          <td></td>
        </tr>
        <tr>
          <td>OTHER</td>
          <td><em>BLOB</em></td>
          <td>Not natively supported by DB2</td>
        </tr>
        <tr>
          <td>REAL</td>
          <td>REAL</td>
          <td></td>
        </tr>
        <tr>
          <td>REF</td>
          <td>REF</td>
          <td></td>
        </tr>
        <tr>
          <td>SMALLINT</td>
          <td>SMALLINT</td>
          <td></td>
        </tr>
        <tr>
          <td>STRUCT</td>
          <td><em>BLOB</em></td>
          <td>Not natively supported by DB2</td>
        </tr>
        <tr>
          <td>TIME</td>
          <td>TIME</td>
          <td></td>
        </tr>
        <tr>
          <td>TIMESTAMP</td>
          <td>TIMESTAMP</td>
          <td></td>
        </tr>
        <tr>
          <td>TINYINT</td>
          <td>SMALLINT</td>
          <td></td>
        </tr>
        <tr>
          <td>VARBINARY</td>
          <td>VARCHAR(n) FOR BIT DATA</td>
          <td></td>
        </tr>
        <tr>
          <td>VARCHAR</td>
          <td>VARCHAR</td>
          <td></td>
        </tr>
      </table>
    </section>
    <section>
      <title>Firebird/Interbase</title>
      <p>
        DdlUtils supports <a href="ext:interbase">Interbase</a> version <strong>6.0</strong> and its
        open-sourced version, <a href="ext:firebird">Firebird</a>. Sadly, for neither version there is
        free documentation available, but rather you have to use the documentation that comes with the
        Interbase database or, in the case of Firebird, you have to buy a book.
      </p>
      <note>
        For this reason, DdlUtils does not officially support the Interbase versions 7 and newer because
        these versions are not open source, and thus require a commercial version to develop against.
        If you happen to run a Interbase database server of version 7 or newer, you could help us adding
        support for these versions.
      </note>
      <table>
        <tr>
          <td>DdlUtils explicitly specifies <code>NULL</code> as default value</td>
          <td>no</td>
        </tr>
        <tr>
          <td>DdlUtils uses primary key definitions embedded in the table definition</td>
          <td>yes</td>
        </tr>
        <tr>
          <td>DdlUtils uses foreign key definitions embedded in the table definition</td>
          <td>no</td>
        </tr>
        <tr>
          <td>DdlUtils uses indices embedded in the table definition</td>
          <td>no</td>
        </tr>
        <tr>
          <td>DdlUtils uses ALTER TABLE statements for dropping tables </td>
          <td>no</td>
        </tr>
        <tr>
          <td>Maximum identifier length</td>
          <td>31</td>
        </tr>
        <tr>
          <td>Quote character</td>
          <td>Single quote char <code>'</code></td>
        </tr>
        <tr>
          <td>Comment format</td>
          <td>A block between <code>/*</code> and <code>*/</code></td>
        </tr>
      </table>
      <table>
        <tr>
          <th>JDBC Type</th>
          <th>Database Type</th>
          <th>Additional comments</th>
        </tr>
        <tr>
          <td>ARRAY</td>
          <td><em>BLOB</em></td>
          <td></td>
        </tr>
        <tr>
          <td>BIGINT</td>
          <td>DECIMAL(38,0)</td>
          <td></td>
        </tr>
        <tr>
          <td>BINARY</td>
          <td>CHAR(n) CHARACTER SET OCTETS</td>
          <td></td>
        </tr>
        <tr>
          <td>BIT</td>
          <td>DECIMAL(1,0)</td>
          <td></td>
        </tr>
        <tr>
          <td>BLOB</td>
          <td>BLOB</td>
          <td></td>
        </tr>
        <tr>
          <td>BOOLEAN</td>
          <td>DECIMAL(1,0)</td>
          <td></td>
        </tr>
        <tr>
          <td>CHAR</td>
          <td>CHAR</td>
          <td></td>
        </tr>
        <tr>
          <td>CLOB</td>
          <td>BLOB SUB_TYPE TEXT</td>
          <td></td>
        </tr>
        <tr>
          <td>DATALINK</td>
          <td><em>BLOB</em></td>
          <td>Not natively supported by Interbase/Firebird</td>
        </tr>
        <tr>
          <td>DATE</td>
          <td>DATE</td>
          <td></td>
        </tr>
        <tr>
          <td>DECIMAL</td>
          <td>DECIMAL</td>
          <td></td>
        </tr>
        <tr>
          <td>DISTINCT</td>
          <td><em>BLOB</em></td>
          <td>Not natively supported by Interbase/Firebird</td>
        </tr>
        <tr>
          <td>DOUBLE</td>
          <td>DOUBLE PRECISION</td>
          <td></td>
        </tr>
        <tr>
          <td>FLOAT</td>
          <td>DOUBLE PRECISION</td>
          <td></td>
        </tr>
        <tr>
          <td>INTEGER</td>
          <td>INTEGER</td>
          <td></td>
        </tr>
        <tr>
          <td>JAVA_OBJECT</td>
          <td><em>BLOB</em></td>
          <td>Not natively supported by Interbase/Firebird</td>
        </tr>
        <tr>
          <td>LONGVARBINARY</td>
          <td>BLOB</td>
          <td></td>
        </tr>
        <tr>
          <td>LONGVARCHAR</td>
          <td>BLOB SUB_TYPE TEXT</td>
          <td></td>
        </tr>
        <tr>
          <td>NULL</td>
          <td><em>BLOB</em></td>
          <td>Not natively supported by Interbase/Firebird</td>
        </tr>
        <tr>
          <td>NUMERIC</td>
          <td>NUMERIC</td>
          <td></td>
        </tr>
        <tr>
          <td>OTHER</td>
          <td><em>BLOB</em></td>
          <td>Not natively supported by Interbase/Firebird</td>
        </tr>
        <tr>
          <td>REAL</td>
          <td>FLOAT</td>
          <td></td>
        </tr>
        <tr>
          <td>REF</td>
          <td><em>BLOB</em></td>
          <td>Not natively supported by Interbase/Firebird</td>
        </tr>
        <tr>
          <td>SMALLINT</td>
          <td>SMALLINT</td>
          <td></td>
        </tr>
        <tr>
          <td>STRUCT</td>
          <td><em>BYTEA</em></td>
          <td>Not natively supported by Interbase/Firebird</td>
        </tr>
        <tr>
          <td>TIME</td>
          <td>TIME</td>
          <td></td>
        </tr>
        <tr>
          <td>TIMESTAMP</td>
          <td>TIMESTAMP</td>
          <td></td>
        </tr>
        <tr>
          <td>TINYINT</td>
          <td>SMALLINT</td>
          <td></td>
        </tr>
        <tr>
          <td>VARBINARY</td>
          <td>VARCHAR(n) CHARACTER SET OCTETS</td>
          <td></td>
        </tr>
        <tr>
          <td>VARCHAR</td>
          <td>VARCHAR</td>
          <td></td>
        </tr>
      </table>
    </section>
    <section>
      <title>HsqlDB</title>
      <p>
        Support for the <a href="ext:hsqldb">HSQLDB</a> database is based upon the version <strong>1.7.0</strong>.
        SQL Documentation for HSQLDB can be found in the distribution, and for the newest version
        <a href="ext:hsqldb/sql-syntax">here</a>.
      </p>
      <table>
        <tr>
          <td>DdlUtils explicitly specifies <code>NULL</code> as default value</td>
          <td>no</td>
        </tr>
        <tr>
          <td>DdlUtils uses primary key definitions embedded in the table definition</td>
          <td>yes</td>
        </tr>
        <tr>
          <td>DdlUtils uses foreign key definitions embedded in the table definition</td>
          <td>no</td>
        </tr>
        <tr>
          <td>DdlUtils uses indices embedded in the table definition</td>
          <td>no</td>
        </tr>
        <tr>
          <td>DdlUtils uses ALTER TABLE statements for dropping tables </td>
          <td>no</td>
        </tr>
        <tr>
          <td>Maximum identifier length</td>
          <td>unlimited</td>
        </tr>
        <tr>
          <td>Quote character</td>
          <td>Single quote char <code>'</code></td>
        </tr>
        <tr>
          <td>Comment format</td>
          <td>Single line starting with <code>--</code></td>
        </tr>
      </table>
      <table>
        <tr>
          <th>JDBC Type</th>
          <th>Database Type</th>
          <th>Additional comments</th>
        </tr>
        <tr>
          <td>ARRAY</td>
          <td><em>LONGVARBINARY</em></td>
          <td>Not natively supported by Hsqldb</td>
        </tr>
        <tr>
          <td>BIGINT</td>
          <td>BIGINT</td>
          <td></td>
        </tr>
        <tr>
          <td>BINARY</td>
          <td>BINARY</td>
          <td></td>
        </tr>
        <tr>
          <td>BIT</td>
          <td>BIT</td>
          <td></td>
        </tr>
        <tr>
          <td>BLOB</td>
          <td>LONGVARBINARY</td>
          <td></td>
        </tr>
        <tr>
          <td>BOOLEAN</td>
          <td><em>BIT</em></td>
          <td>BOOLEAN is supported natively by Hsqldb only since version 1.7.2</td>
          <td></td>
        </tr>
        <tr>
          <td>CHAR</td>
          <td>CHAR</td>
          <td>The size is optional because per default Hsqldb does not enforce it</td>
        </tr>
        <tr>
          <td>CLOB</td>
          <td><em>LONGVARCHAR</em></td>
          <td>Not natively supported by Hsqldb</td>
          <td></td>
        </tr>
        <tr>
          <td>DATALINK</td>
          <td><em>LONGVARBINARY</em></td>
          <td>Not natively supported by Hsqldb</td>
        </tr>
        <tr>
          <td>DATE</td>
          <td>DATE</td>
          <td></td>
        </tr>
        <tr>
          <td>DECIMAL</td>
          <td>DECIMAL</td>
          <td>Precision and scale are ignored by Hsqldb, as Hsqldb uses unlimited precision and scale</td>
        </tr>
        <tr>
          <td>DISTINCT</td>
          <td><em>LONGVARBINARY </em></td>
          <td>Not natively supported by Hsqldb</td>
        </tr>
        <tr>
          <td>DOUBLE</td>
          <td>DOUBLE</td>
          <td>Precision and scale are ignored by Hsqldb</td>
        </tr>
        <tr>
          <td>FLOAT</td>
          <td>DOUBLE</td>
          <td>Though Hsqldb supports FLOAT, it is recommended to use DOUBLE</td>
        </tr>
        <tr>
          <td>INTEGER</td>
          <td>INTEGER</td>
          <td></td>
        </tr>
        <tr>
          <td>JAVA_OBJECT</td>
          <td>OBJECT</td>
          <td></td>
        </tr>
        <tr>
          <td>LONGVARBINARY</td>
          <td>LONGVARBINARY</td>
          <td></td>
        </tr>
        <tr>
          <td>LONGVARCHAR</td>
          <td>LONGVARCHAR</td>
          <td></td>
        </tr>
        <tr>
          <td>NULL</td>
          <td><em>LONGVARBINARY</em></td>
          <td>Not natively supported by Hsqldb</td>
        </tr>
        <tr>
          <td>NUMERIC</td>
          <td>NUMERIC</td>
          <td>Precision and scale are ignored by Hsqldb, as Hsqldb uses unlimited precision and scale</td>
        </tr>
        <tr>
          <td>OTHER</td>
          <td>OTHER</td>
          <td></td>
        </tr>
        <tr>
          <td>REAL</td>
          <td>REAL</td>
          <td></td>
        </tr>
        <tr>
          <td>REF</td>
          <td><em>LONGVARBINARY</em></td>
          <td>Not natively supported by Hsqldb</td>
        </tr>
        <tr>
          <td>SMALLINT</td>
          <td>SMALLINT</td>
          <td></td>
        </tr>
        <tr>
          <td>STRUCT</td>
          <td><em>LONGVARBINARY</em></td>
          <td>Not natively supported by Hsqldb</td>
        </tr>
        <tr>
          <td>TIME</td>
          <td>TIME</td>
          <td></td>
        </tr>
        <tr>
          <td>TIMESTAMP</td>
          <td>TIMESTAMP</td>
          <td></td>
        </tr>
        <tr>
          <td>TINYINT</td>
          <td>TINYINT</td>
          <td></td>
        </tr>
        <tr>
          <td>VARBINARY</td>
          <td>VARBINARY</td>
          <td></td>
        </tr>
        <tr>
          <td>VARCHAR</td>
          <td>VARCHAR</td>
          <td>The size is optional because per default Hsqldb does not enforce it</td>
        </tr>
      </table>
    </section>
    <section>
      <title>MaxDB/SapDB</title>
      <p>
        The <a href="ext:sapdb">SapDB</a> database was open-sourced and rebranded <a href="ext:maxdb">MaxDB</a> 
        beginning with version 7.4. DdlUtils supports SapDB version <strong>7.2</strong> and MaxDB version
        <strong>7.5</strong>, and newer. Documentation of the SQL supported by SapDB is found in the
        <a href="ext:sapdb/manual">Reference manual</a>. Likewise, documentation for MaxDB is contained in
        the <a href="ext:maxdb/manual">MaxDB documentation</a>.
      </p>
      <table>
        <tr>
          <td>DdlUtils explicitly specifies <code>NULL</code> as default value</td>
          <td>no</td>
        </tr>
        <tr>
          <td>DdlUtils uses primary key definitions embedded in the table definition</td>
          <td>yes</td>
        </tr>
        <tr>
          <td>DdlUtils uses foreign key definitions embedded in the table definition</td>
          <td>no</td>
        </tr>
        <tr>
          <td>DdlUtils uses indices embedded in the table definition</td>
          <td>no</td>
        </tr>
        <tr>
          <td>DdlUtils uses ALTER TABLE statements for dropping tables </td>
          <td>no</td>
        </tr>
        <tr>
          <td>Maximum identifier length</td>
          <td>32</td>
        </tr>
        <tr>
          <td>Quote character</td>
          <td>Single quote char <code>'</code></td>
        </tr>
        <tr>
          <td>Comment format</td>
          <td>A block between <code>/*</code> and <code>*/</code></td>
        </tr>
      </table>
      <table>
        <tr>
          <th>JDBC Type</th>
          <th>Database Type</th>
          <th>Additional comments</th>
        </tr>
        <tr>
          <td>ARRAY</td>
          <td><em>LONG BYTE</em></td>
          <td>Not natively supported by SapDB/MaxDB</td>
        </tr>
        <tr>
          <td>BIGINT</td>
          <td><em>FIXED(38,0)</em></td>
          <td>Not natively supported by SapDB/MaxDB</td>
        </tr>
        <tr>
          <td>BINARY</td>
          <td>LONG BYTE</td>
          <td></td>
        </tr>
        <tr>
          <td>BIT</td>
          <td>BOOLEAN</td>
          <td></td>
        </tr>
        <tr>
          <td>BLOB</td>
          <td>LONG BYTE</td>
          <td></td>
        </tr>
        <tr>
          <td>BOOLEAN</td>
          <td>BOOLEAN</td>
          <td></td>
        </tr>
        <tr>
          <td>CHAR</td>
          <td>CHAR</td>
          <td></td>
        </tr>
        <tr>
          <td>CLOB</td>
          <td>LONG</td>
          <td></td>
        </tr>
        <tr>
          <td>DATALINK</td>
          <td><em>LONG BYTE</em></td>
          <td>Not natively supported by SapDB/MaxDB</td>
        </tr>
        <tr>
          <td>DATE</td>
          <td>DATE</td>
          <td></td>
        </tr>
        <tr>
          <td>DECIMAL</td>
          <td>DECIMAL</td>
          <td></td>
        </tr>
        <tr>
          <td>DISTINCT</td>
          <td><em>LONG BYTE</em></td>
          <td>Not natively supported by SapDB/MaxDB</td>
        </tr>
        <tr>
          <td>DOUBLE</td>
          <td>DOUBLE PRECISION</td>
          <td></td>
        </tr>
        <tr>
          <td>FLOAT</td>
          <td>DOUBLE PRECISION</td>
          <td></td>
        </tr>
        <tr>
          <td>INTEGER</td>
          <td>INTEGER</td>
          <td></td>
        </tr>
        <tr>
          <td>JAVA_OBJECT</td>
          <td><em>LONG BYTE</em></td>
          <td>Not natively supported by SapDB/MaxDB</td>
        </tr>
        <tr>
          <td>LONGVARBINARY</td>
          <td>LONG BYTE</td>
          <td></td>
        </tr>
        <tr>
          <td>LONGVARCHAR</td>
          <td>LONG VARCHAR</td>
          <td></td>
        </tr>
        <tr>
          <td>NULL</td>
          <td><em>LONG BYTE</em></td>
          <td>Not natively supported by SapDB/MaxDB</td>
        </tr>
        <tr>
          <td>NUMERIC</td>
          <td>DECIMAL</td>
          <td></td>
        </tr>
        <tr>
          <td>OTHER</td>
          <td><em>LONG BYTE</em></td>
          <td>Not natively supported by SapDB/MaxDB</td>
        </tr>
        <tr>
          <td>REAL</td>
          <td>REAL</td>
          <td></td>
        </tr>
        <tr>
          <td>REF</td>
          <td><em>LONG BYTE</em></td>
          <td>Not natively supported by SapDB/MaxDB</td>
        </tr>
        <tr>
          <td>SMALLINT</td>
          <td>SMALLINT</td>
          <td></td>
        </tr>
        <tr>
          <td>STRUCT</td>
          <td><em>LONG BYTE</em></td>
          <td>Not natively supported by SapDB/MaxDB</td>
        </tr>
        <tr>
          <td>TIME</td>
          <td>TIME</td>
          <td></td>
        </tr>
        <tr>
          <td>TIMESTAMP</td>
          <td><em>TIMESTAMP</em></td>
          <td>Not natively supported by SapDB/MaxDB</td>
        </tr>
        <tr>
          <td>TINYINT</td>
          <td>SMALLINT</td>
          <td></td>
        </tr>
        <tr>
          <td>VARBINARY</td>
          <td>LONG BYTE</td>
          <td></td>
        </tr>
        <tr>
          <td>VARCHAR</td>
          <td>VARCHAR</td>
          <td></td>
        </tr>
      </table>
    </section>
    <section>
      <title>Mckoi</title>
      <p>
        The open source database <a href="ext:mckoi">McKoi</a> is supported in version <strong>1.0.3</strong>.
        Details on the supported SQL and datatypes can be found in Chapter 2 of the
        <a href="ext:mckoi/manual">Database Manual</a>.
      </p>
      <table>
        <tr>
          <td>DdlUtils explicitly specifies <code>NULL</code> as default value</td>
          <td>no</td>
        </tr>
        <tr>
          <td>DdlUtils uses primary key definitions embedded in the table definition</td>
          <td>yes</td>
        </tr>
        <tr>
          <td>DdlUtils uses foreign key definitions embedded in the table definition</td>
          <td>no</td>
        </tr>
        <tr>
          <td>DdlUtils uses indices embedded in the table definition</td>
          <td>no</td>
        </tr>
        <tr>
          <td>DdlUtils uses ALTER TABLE statements for dropping tables </td>
          <td>no</td>
        </tr>
        <tr>
          <td>Maximum identifier length</td>
          <td>unlimited</td>
        </tr>
        <tr>
          <td>Quote character</td>
          <td>Single quote char <code>'</code></td>
        </tr>
        <tr>
          <td>Comment format</td>
          <td>Single line starting with <code>--</code></td>
        </tr>
      </table>
      <table>
        <tr>
          <th>JDBC Type</th>
          <th>Database Type</th>
          <th>Additional comments</th>
        </tr>
        <tr>
          <td>ARRAY</td>
          <td><em>BLOB</em></td>
          <td>Not natively supported by McKoi</td>
        </tr>
        <tr>
          <td>BIGINT</td>
          <td>BIGINT</td>
          <td></td>
        </tr>
        <tr>
          <td>BINARY</td>
          <td>BINARY</td>
          <td></td>
        </tr>
        <tr>
          <td>BIT</td>
          <td>BOOLEAN</td>
          <td></td>
        </tr>
        <tr>
          <td>BLOB</td>
          <td>BLOB</td>
          <td></td>
        </tr>
        <tr>
          <td>BOOLEAN</td>
          <td>BOOLEAN</td>
          <td></td>
        </tr>
        <tr>
          <td>CHAR</td>
          <td>CHAR</td>
          <td></td>
        </tr>
        <tr>
          <td>CLOB</td>
          <td>CLOB</td>
          <td></td>
        </tr>
        <tr>
          <td>DATALINK</td>
          <td><em>BLOB</em></td>
          <td>Not natively supported by McKoi</td>
        </tr>
        <tr>
          <td>DATE</td>
          <td>DATE</td>
          <td></td>
        </tr>
        <tr>
          <td>DECIMAL</td>
          <td>DECIMAL</td>
          <td></td>
        </tr>
        <tr>
          <td>DISTINCT</td>
          <td><em>BLOB</em></td>
          <td>Not natively supported by McKoi</td>
        </tr>
        <tr>
          <td>DOUBLE</td>
          <td>DOUBLE</td>
          <td></td>
        </tr>
        <tr>
          <td>FLOAT</td>
          <td>DOUBLE</td>
          <td></td>
        </tr>
        <tr>
          <td>INTEGER</td>
          <td>INTEGER</td>
          <td></td>
        </tr>
        <tr>
          <td>JAVA_OBJECT</td>
          <td>JAVA_OBJECT</td>
          <td></td>
        </tr>
        <tr>
          <td>LONGVARBINARY</td>
          <td>LONGVARBINARY</td>
          <td></td>
        </tr>
        <tr>
          <td>LONGVARCHAR</td>
          <td>LONGVARCHAR</td>
          <td></td>
        </tr>
        <tr>
          <td>NULL</td>
          <td><em>BLOB</em></td>
          <td>Not natively supported by McKoi</td>
        </tr>
        <tr>
          <td>NUMERIC</td>
          <td>NUMERIC</td>
          <td></td>
        </tr>
        <tr>
          <td>OTHER</td>
          <td><em>BLOB</em></td>
          <td>Not natively supported by McKoi</td>
        </tr>
        <tr>
          <td>REAL</td>
          <td>REAL</td>
          <td></td>
        </tr>
        <tr>
          <td>REF</td>
          <td><em>BLOB</em></td>
          <td>Not natively supported by McKoi</td>
        </tr>
        <tr>
          <td>SMALLINT</td>
          <td>SMALLINT</td>
          <td></td>
        </tr>
        <tr>
          <td>STRUCT</td>
          <td><em>BLOB</em></td>
          <td>Not natively supported by McKoi</td>
        </tr>
        <tr>
          <td>TIME</td>
          <td>TIME</td>
          <td></td>
        </tr>
        <tr>
          <td>TIMESTAMP</td>
          <td>TIMESTAMP</td>
          <td></td>
        </tr>
        <tr>
          <td>TINYINT</td>
          <td>TINYINT</td>
          <td></td>
        </tr>
        <tr>
          <td>VARBINARY</td>
          <td>VARBINARY</td>
          <td></td>
        </tr>
        <tr>
          <td>VARCHAR</td>
          <td>VARCHAR</td>
          <td></td>
        </tr>
      </table>
    </section>
    <section>
      <title>MySQL</title>
      <p>
        <a href="ext:mysql">MySQL</a> is supported from version <strong>3.23</strong> onwards. Note that
        the major versions (3, 4, 5) differ in their datatype support. The supported SQL syntax and datatypes
        can be found in the <a href="ext:mysql/manual">MySQL Reference Manual</a>.
      </p>
      <table>
        <tr>
          <td>DdlUtils explicitly specifies <code>NULL</code> as default value</td>
          <td>no</td>
        </tr>
        <tr>
          <td>DdlUtils uses primary key definitions embedded in the table definition</td>
          <td>yes</td>
        </tr>
        <tr>
          <td>DdlUtils uses foreign key definitions embedded in the table definition</td>
          <td>no</td>
        </tr>
        <tr>
          <td>DdlUtils uses indices embedded in the table definition</td>
          <td>no</td>
        </tr>
        <tr>
          <td>DdlUtils uses ALTER TABLE statements for dropping tables </td>
          <td>no</td>
        </tr>
        <tr>
          <td>Maximum identifier length</td>
          <td>64</td>
        </tr>
        <tr>
          <td>Quote character</td>
          <td>Single quote char <code>'</code></td>
        </tr>
        <tr>
          <td>Comment format</td>
          <td>Single line starting with <code>#</code></td>
        </tr>
      </table>
      <table>
        <tr>
          <th>JDBC Type</th>
          <th>Database Type</th>
          <th>Additional comments</th>
        </tr>
        <tr>
          <td>ARRAY</td>
          <td><em>LONGBLOB</em></td>
          <td>Not natively supported by MySQL</td>
        </tr>
        <tr>
          <td>BIGINT</td>
          <td>BIGINT</td>
          <td></td>
        </tr>
        <tr>
          <td>BINARY</td>
          <td>CHAR(n) BINARY</td>
          <td><em>n</em> specifies the number of bytes, with 1 &lt;= n &lt;= 255</td>
        </tr>
        <tr>
          <td>BIT</td>
          <td>TINYINT(1)</td>
          <td></td>
        </tr>
        <tr>
          <td>BLOB</td>
          <td>LONGBLOB</td>
          <td></td>
        </tr>
        <tr>
          <td>BOOLEAN</td>
          <td>TINYINT(1)</td>
          <td></td>
        </tr>
        <tr>
          <td>CHAR</td>
          <td>CHAR</td>
          <td></td>
        </tr>
        <tr>
          <td>CLOB</td>
          <td>LONGTEXT</td>
          <td></td>
        </tr>
        <tr>
          <td>DATALINK</td>
          <td><em>MEDIUMBLOB</em></td>
          <td>Not natively supported by MySQL</td>
        </tr>
        <tr>
          <td>DATE</td>
          <td>DATE</td>
          <td></td>
        </tr>
        <tr>
          <td>DECIMAL</td>
          <td>DECIMAL</td>
          <td></td>
        </tr>
        <tr>
          <td>DISTINCT</td>
          <td><em>LONGBLOB</em></td>
          <td>Not natively supported by MySQL</td>
        </tr>
        <tr>
          <td>DOUBLE</td>
          <td>DOUBLE</td>
          <td></td>
        </tr>
        <tr>
          <td>FLOAT</td>
          <td>DOUBLE</td>
          <td></td>
        </tr>
        <tr>
          <td>INTEGER</td>
          <td>INTEGER</td>
          <td></td>
        </tr>
        <tr>
          <td>JAVA_OBJECT</td>
          <td><em>LONGBLOB</em></td>
          <td>Not natively supported by MySQL</td>
        </tr>
        <tr>
          <td>LONGVARBINARY</td>
          <td>MEDIUMBLOB</td>
          <td></td>
        </tr>
        <tr>
          <td>LONGVARCHAR</td>
          <td>MEDIUMTEXT</td>
          <td></td>
        </tr>
        <tr>
          <td>NULL</td>
          <td><em>MEDIUMBLOB</em></td>
          <td>Not natively supported by MySQL</td>
        </tr>
        <tr>
          <td>NUMERIC</td>
          <td>DECIMAL</td>
          <td></td>
        </tr>
        <tr>
          <td>OTHER</td>
          <td><em>LONGBLOB</em></td>
          <td>Not natively supported by MySQL</td>
        </tr>
        <tr>
          <td>REAL</td>
          <td>FLOAT</td>
          <td>MySQL has a REAL datatype that is per default mapped to DOUBLE, though it might be mapped to FLOAT via configuration of the server.</td>
        </tr>
        <tr>
          <td>REF</td>
          <td><em>MEDIUMBLOB</em></td>
          <td>Not natively supported by MySQL</td>
        </tr>
        <tr>
          <td>SMALLINT</td>
          <td>SMALLINT</td>
          <td></td>
        </tr>
        <tr>
          <td>STRUCT</td>
          <td><em>LONGBLOB</em></td>
          <td>Not natively supported by MySQL</td>
        </tr>
        <tr>
          <td>TIME</td>
          <td>TIME</td>
          <td></td>
        </tr>
        <tr>
          <td>TIMESTAMP</td>
          <td>TIMESTAMP</td>
          <td></td>
        </tr>
        <tr>
          <td>TINYINT</td>
          <td>TINYINT</td>
          <td></td>
        </tr>
        <tr>
          <td>VARBINARY</td>
          <td>VARCHAR(n) BINARY</td>
          <td><em>n</em> specifies the number of bytes, with 1 &lt;= n &lt;= 255</td>
        </tr>
        <tr>
          <td>VARCHAR</td>
          <td>VARCHAR</td>
          <td></td>
        </tr>
      </table>
    </section>
    <section>
      <title>Oracle</title>
      <p>
        Support for the <a href="ext:oracle">Oracle database</a> is based upon the version <strong>8.1.7</strong>.
        Info about the datatypes and SQL elements supported in this version can be found in the
        <strong>Oracle8i SQL Reference</strong>. You can access this documentation from the
        <a href="ext:oracle/otn">Oracle Technology Network</a>. Registration to this area is free.
      </p>
      <table>
        <tr>
          <td>DdlUtils explicitly specifies <code>NULL</code> as default value</td>
          <td>no</td>
        </tr>
        <tr>
          <td>DdlUtils uses primary key definitions embedded in the table definition</td>
          <td>yes</td>
        </tr>
        <tr>
          <td>DdlUtils uses foreign key definitions embedded in the table definition</td>
          <td>no</td>
        </tr>
        <tr>
          <td>DdlUtils uses indices embedded in the table definition</td>
          <td>no</td>
        </tr>
        <tr>
          <td>DdlUtils uses ALTER TABLE statements for dropping tables </td>
          <td>no</td>
        </tr>
        <tr>
          <td>Maximum identifier length</td>
          <td>30</td>
        </tr>
        <tr>
          <td>Quote character</td>
          <td>Single quote char <code>'</code></td>
        </tr>
        <tr>
          <td>Comment format</td>
          <td>Single line starting with <code>--</code></td>
        </tr>
      </table>
      <table>
        <tr>
          <th>JDBC Type</th>
          <th>Database Type</th>
          <th>Additional comments</th>
        </tr>
        <tr>
          <td>ARRAY</td>
          <td><em>BLOB</em></td>
          <td>Not natively supported by Oracle</td>
        </tr>
        <tr>
          <td>BIGINT</td>
          <td>NUMBER(38,0)</td>
          <td></td>
        </tr>
        <tr>
          <td>BINARY</td>
          <td>RAW</td>
          <td>Oracle requires the specification of the size for <code>RAW</code> columns. If no size was specified, then 254 is used.</td>
        </tr>
        <tr>
          <td>BIT</td>
          <td>NUMBER(1,0)</td>
          <td></td>
        </tr>
        <tr>
          <td>BLOB</td>
          <td>BLOB</td>
          <td></td>
        </tr>
        <tr>
          <td>BOOLEAN</td>
          <td>NUMBER(1,0)</td>
          <td></td>
        </tr>
        <tr>
          <td>CHAR</td>
          <td>CHAR</td>
          <td></td>
        </tr>
        <tr>
          <td>CLOB</td>
          <td>CLOB</td>
          <td></td>
        </tr>
        <tr>
          <td>DATALINK</td>
          <td><em>BLOB</em></td>
          <td>Not natively supported by Oracle</td>
        </tr>
        <tr>
          <td>DATE</td>
          <td>DATE</td>
          <td></td>
        </tr>
        <tr>
          <td>DECIMAL</td>
          <td>NUMBER</td>
          <td></td>
        </tr>
        <tr>
          <td>DISTINCT</td>
          <td><em>BLOB</em></td>
          <td>Not natively supported by Oracle</td>
        </tr>
        <tr>
          <td>DOUBLE</td>
          <td>NUMBER(38)</td>
          <td></td>
        </tr>
        <tr>
          <td>FLOAT</td>
          <td>NUMBER(38)</td>
          <td></td>
        </tr>
        <tr>
          <td>INTEGER</td>
          <td>NUMBER(20,0)</td>
          <td></td>
        </tr>
        <tr>
          <td>JAVA_OBJECT</td>
          <td><em>BLOB</em></td>
          <td>Not natively supported by Oracle</td>
        </tr>
        <tr>
          <td>LONGVARBINARY</td>
          <td><em>BLOB</em></td>
          <td>Not natively supported by Oracle</td>
        </tr>
        <tr>
          <td>LONGVARCHAR</td>
          <td><em>CLOB</em></td>
          <td>Not natively supported by Oracle</td>
        </tr>
        <tr>
          <td>NULL</td>
          <td><em>BLOB</em></td>
          <td>Not natively supported by Oracle</td>
        </tr>
        <tr>
          <td>NUMERIC</td>
          <td>NUMBER</td>
          <td></td>
        </tr>
        <tr>
          <td>OTHER</td>
          <td><em>BLOB</em></td>
          <td>Not natively supported by Oracle</td>
        </tr>
        <tr>
          <td>REAL</td>
          <td>NUMBER(18)</td>
          <td></td>
        </tr>
        <tr>
          <td>REF</td>
          <td><em>BLOB</em></td>
          <td>Not natively supported by Oracle</td>
        </tr>
        <tr>
          <td>SMALLINT</td>
          <td>NUMBER(5,0)</td>
          <td></td>
        </tr>
        <tr>
          <td>STRUCT</td>
          <td><em>BLOB</em></td>
          <td>Not natively supported by Oracle</td>
        </tr>
        <tr>
          <td>TIME</td>
          <td>DATE</td>
          <td></td>
        </tr>
        <tr>
          <td>TIMESTAMP</td>
          <td><em>DATE</em></td>
          <td>Only natively supported in Oracle 9 and above</td>
        </tr>
        <tr>
          <td>TINYINT</td>
          <td>NUMBER(3,0)</td>
          <td></td>
        </tr>
        <tr>
          <td>VARBINARY</td>
          <td>RAW</td>
          <td>Oracle requires the specification of the size for <code>RAW</code> columns. If no size was specified, then 254 is used.</td>
        </tr>
        <tr>
          <td>VARCHAR</td>
          <td>VARCHAR2</td>
          <td></td>
        </tr>
      </table>
    </section>
    <section>
      <title>PostgreSQL</title>
      <p>
        DdlUtils supports <a href="ext:postgresql">PostgreSQL</a> version <strong>7.2.8</strong> and newer. SQL syntax
        details and supported datatypes are described in the <a href="ext:postgresql/manual">Manual</a>.
      </p>
      <table>
        <tr>
          <td>DdlUtils explicitly specifies <code>NULL</code> as default value</td>
          <td>no</td>
        </tr>
        <tr>
          <td>DdlUtils uses primary key definitions embedded in the table definition</td>
          <td>yes</td>
        </tr>
        <tr>
          <td>DdlUtils uses foreign key definitions embedded in the table definition</td>
          <td>no</td>
        </tr>
        <tr>
          <td>DdlUtils uses indices embedded in the table definition</td>
          <td>no</td>
        </tr>
        <tr>
          <td>DdlUtils uses ALTER TABLE statements for dropping tables </td>
          <td>no</td>
        </tr>
        <tr>
          <td>Maximum identifier length</td>
          <td>31</td>
        </tr>
        <tr>
          <td>Quote character</td>
          <td>Single quote char <code>'</code></td>
        </tr>
        <tr>
          <td>Comment format</td>
          <td>Single line starting with <code>--</code></td>
        </tr>
      </table>
      <table>
        <tr>
          <th>JDBC Type</th>
          <th>Database Type</th>
          <th>Additional comments</th>
        </tr>
        <tr>
          <td>ARRAY</td>
          <td><em>BYTEA</em></td>
          <td>PostgreSQL can work with arrays directly, but this is currently not directly supported in DdlUtils</td>
        </tr>
        <tr>
          <td>BIGINT</td>
          <td>BIGINT</td>
          <td></td>
        </tr>
        <tr>
          <td>BINARY</td>
          <td>BYTEA</td>
          <td></td>
        </tr>
        <tr>
          <td>BIT</td>
          <td>BOOLEAN</td>
          <td></td>
        </tr>
        <tr>
          <td>BLOB</td>
          <td>BYTEA</td>
          <td></td>
        </tr>
        <tr>
          <td>BOOLEAN</td>
          <td>BOOLEAN</td>
          <td></td>
        </tr>
        <tr>
          <td>CHAR</td>
          <td>CHAR</td>
          <td></td>
        </tr>
        <tr>
          <td>CLOB</td>
          <td>TEXT</td>
          <td></td>
        </tr>
        <tr>
          <td>DATALINK</td>
          <td><em>BYTEA</em></td>
          <td>Not natively supported by PostgreSQL</td>
        </tr>
        <tr>
          <td>DATE</td>
          <td>DATE</td>
          <td></td>
        </tr>
        <tr>
          <td>DECIMAL</td>
          <td>NUMERIC</td>
          <td></td>
        </tr>
        <tr>
          <td>DISTINCT</td>
          <td><em>BYTEA</em></td>
          <td>Not natively supported by PostgreSQL</td>
        </tr>
        <tr>
          <td>DOUBLE</td>
          <td>DOUBLE PRECISION</td>
          <td></td>
        </tr>
        <tr>
          <td>FLOAT</td>
          <td>DOUBLE PRECISION</td>
          <td></td>
        </tr>
        <tr>
          <td>INTEGER</td>
          <td>INTEGER</td>
          <td></td>
        </tr>
        <tr>
          <td>JAVA_OBJECT</td>
          <td><em>BYTEA</em></td>
          <td>Not natively supported by PostgreSQL</td>
        </tr>
        <tr>
          <td>LONGVARBINARY</td>
          <td>BYTEA</td>
          <td></td>
        </tr>
        <tr>
          <td>LONGVARCHAR</td>
          <td>TEXT</td>
          <td></td>
        </tr>
        <tr>
          <td>NULL</td>
          <td><em>BYTEA</em></td>
          <td>Not natively supported by PostgreSQL</td>
        </tr>
        <tr>
          <td>NUMERIC</td>
          <td>NUMERIC</td>
          <td></td>
        </tr>
        <tr>
          <td>OTHER</td>
          <td><em>BYTEA</em></td>
          <td>Not natively supported by PostgreSQL</td>
        </tr>
        <tr>
          <td>REAL</td>
          <td>REAL</td>
          <td></td>
        </tr>
        <tr>
          <td>REF</td>
          <td><em>BYTEA</em></td>
          <td>Not natively supported by PostgreSQL</td>
        </tr>
        <tr>
          <td>SMALLINT</td>
          <td>SMALLINT</td>
          <td></td>
        </tr>
        <tr>
          <td>STRUCT</td>
          <td><em>BYTEA</em></td>
          <td>Not natively supported by PostgreSQL</td>
        </tr>
        <tr>
          <td>TIME</td>
          <td>TIME</td>
          <td></td>
        </tr>
        <tr>
          <td>TIMESTAMP</td>
          <td>TIMESTAMP</td>
          <td></td>
        </tr>
        <tr>
          <td>TINYINT</td>
          <td>SMALLINT</td>
          <td></td>
        </tr>
        <tr>
          <td>VARBINARY</td>
          <td>BYTEA</td>
          <td></td>
        </tr>
        <tr>
          <td>VARCHAR</td>
          <td>VARCHAR</td>
          <td></td>
        </tr>
      </table>
    </section>
    <section>
      <title>SQL Server</title>
      <p>
        The <a href="ext:sqlserver">SQL Server</a> is supported form version <strong>6.5</strong> onwards.
        Information about the versions prior to SQL Server 2000 however is difficult to find online, you'll
        have to resort to the documentation accompanying the database. Information for version 2000 can be found
        <a href="ext:sqlserver/manual-2000">here</a>.
      </p>
      <table>
        <tr>
          <td>DdlUtils explicitly specifies <code>NULL</code> as default value</td>
          <td>no</td>
        </tr>
        <tr>
          <td>DdlUtils uses primary key definitions embedded in the table definition</td>
          <td>yes</td>
        </tr>
        <tr>
          <td>DdlUtils uses foreign key definitions embedded in the table definition</td>
          <td>no</td>
        </tr>
        <tr>
          <td>DdlUtils uses indices embedded in the table definition</td>
          <td>no</td>
        </tr>
        <tr>
          <td>DdlUtils uses ALTER TABLE statements for dropping tables </td>
          <td>no</td>
        </tr>
        <tr>
          <td>Maximum identifier length</td>
          <td>128</td>
        </tr>
        <tr>
          <td>Quote character</td>
          <td>Single quote char <code>'</code></td>
        </tr>
        <tr>
          <td>Comment format</td>
          <td>Single line starting with <code>--</code></td>
        </tr>
      </table>
      <table>
        <tr>
          <th>JDBC Type</th>
          <th>Database Type</th>
          <th>Additional comments</th>
        </tr>
        <tr>
          <td>ARRAY</td>
          <td><em>IMAGE</em></td>
          <td>Not natively supported by SQL Server</td>
        </tr>
        <tr>
          <td>BIGINT</td>
          <td><em>DECIMAL(19,0)</em></td>
          <td>Natively supported only since SQL Server 2000</td>
        </tr>
        <tr>
          <td>BINARY</td>
          <td>BINARY</td>
          <td></td>
        </tr>
        <tr>
          <td>BIT</td>
          <td>BIT</td>
          <td></td>
        </tr>
        <tr>
          <td>BLOB</td>
          <td>IMAGE</td>
          <td></td>
        </tr>
        <tr>
          <td>BOOLEAN</td>
          <td>BIT</td>
          <td></td>
        </tr>
        <tr>
          <td>CHAR</td>
          <td>CHAR</td>
          <td></td>
        </tr>
        <tr>
          <td>CLOB</td>
          <td>TEXT</td>
          <td></td>
        </tr>
        <tr>
          <td>DATALINK</td>
          <td><em>IMAGE</em></td>
          <td>Not natively supported by SQL Server</td>
        </tr>
        <tr>
          <td>DATE</td>
          <td>DATETIME</td>
          <td></td>
        </tr>
        <tr>
          <td>DECIMAL</td>
          <td>DECIMAL</td>
          <td></td>
        </tr>
        <tr>
          <td>DISTINCT</td>
          <td><em>IMAGE</em></td>
          <td>Not natively supported by SQL Server</td>
        </tr>
        <tr>
          <td>DOUBLE</td>
          <td>FLOAT</td>
          <td></td>
        </tr>
        <tr>
          <td>FLOAT</td>
          <td>FLOAT</td>
          <td></td>
        </tr>
        <tr>
          <td>INTEGER</td>
          <td>INT</td>
          <td></td>
        </tr>
        <tr>
          <td>JAVA_OBJECT</td>
          <td><em>IMAGE</em></td>
          <td>Not natively supported by SQL Server</td>
        </tr>
        <tr>
          <td>LONGVARBINARY</td>
          <td>BYTEA</td>
          <td></td>
        </tr>
        <tr>
          <td>LONGVARCHAR</td>
          <td>IMAGE</td>
          <td></td>
        </tr>
        <tr>
          <td>NULL</td>
          <td><em>IMAGE</em></td>
          <td>Not natively supported by SQL Server</td>
        </tr>
        <tr>
          <td>NUMERIC</td>
          <td>NUMERIC</td>
          <td></td>
        </tr>
        <tr>
          <td>OTHER</td>
          <td><em>IMAGE</em></td>
          <td>Not natively supported by SQL Server</td>
        </tr>
        <tr>
          <td>REAL</td>
          <td>REAL</td>
          <td></td>
        </tr>
        <tr>
          <td>REF</td>
          <td><em>IMAGE</em></td>
          <td>Not natively supported by SQL Server</td>
        </tr>
        <tr>
          <td>SMALLINT</td>
          <td>SMALLINT</td>
          <td></td>
        </tr>
        <tr>
          <td>STRUCT</td>
          <td><em>IMAGE</em></td>
          <td>Not natively supported by SQL Server</td>
        </tr>
        <tr>
          <td>TIME</td>
          <td>DATETIME</td>
          <td></td>
        </tr>
        <tr>
          <td>TIMESTAMP</td>
          <td><em>DATETIME</em></td>
          <td>The native <code>TIMESTAMP</code> type of SQL Server serves a different purpose: it provides a counter
              that automatically increments upon each insertion or update of the table</td>
        </tr>
        <tr>
          <td>TINYINT</td>
          <td><em>SMALLINT</em></td>
          <td>The native <code>TINYINT</code> type only supports values between 0 and 255</td>
        </tr>
        <tr>
          <td>VARBINARY</td>
          <td>VARBINARY</td>
          <td></td>
        </tr>
        <tr>
          <td>VARCHAR</td>
          <td>VARCHAR</td>
          <td></td>
        </tr>
      </table>
    </section>
    <section>
      <title>Sybase</title>
      <p>
        DdlUtils supports the Sybase products <a href="ext:sybase/sqlserver">SQL Server</a> from version 
        <strong>10.0</strong> on, and <a href="ext:sybase/ase">Adaptive Server Enterprise</a> from version
        <strong>11.5</strong> on. The Sybase documentation can be found in the
        <a href="ext:sybase/manual-archive">Archive</a> in the <em>Transact-SQL User's Guide</em> document
        for the respective version. The newest version (<strong>12.5</strong>)
        is found <a href="ext:sybase/manual">here</a>.
      </p>
      <table>
        <tr>
          <td>DdlUtils explicitly specifies <code>NULL</code> as default value</td>
          <td>no</td>
        </tr>
        <tr>
          <td>DdlUtils uses primary key definitions embedded in the table definition</td>
          <td>yes</td>
        </tr>
        <tr>
          <td>DdlUtils uses foreign key definitions embedded in the table definition</td>
          <td>no</td>
        </tr>
        <tr>
          <td>DdlUtils uses indices embedded in the table definition</td>
          <td>no</td>
        </tr>
        <tr>
          <td>DdlUtils uses ALTER TABLE statements for dropping tables</td>
          <td>no</td>
        </tr>
        <tr>
          <td>Maximum identifier length</td>
          <td>30</td>
        </tr>
        <tr>
          <td>Quote character</td>
          <td>Single quote char <code>'</code></td>
        </tr>
        <tr>
          <td>Comment format</td>
          <td>A block between <code>/*</code> and <code>*/</code></td>
        </tr>
      </table>
      <table>
        <tr>
          <th>JDBC Type</th>
          <th>Database Type</th>
          <th>Additional comments</th>
        </tr>
        <tr>
          <td>ARRAY</td>
          <td><em>IMAGE</em></td>
          <td>Not natively supported by Sybase</td>
        </tr>
        <tr>
          <td>BIGINT</td>
          <td><em>DECIMAL(19,0)</em></td>
          <td>Not natively supported by Sybase</td>
        </tr>
        <tr>
          <td>BINARY</td>
          <td>BINARY</td>
          <td></td>
        </tr>
        <tr>
          <td>BIT</td>
          <td>BIT</td>
          <td></td>
        </tr>
        <tr>
          <td>BLOB</td>
          <td>IMAGE</td>
          <td></td>
        </tr>
        <tr>
          <td>BOOLEAN</td>
          <td>BIT</td>
          <td></td>
        </tr>
        <tr>
          <td>CHAR</td>
          <td>CHAR</td>
          <td></td>
        </tr>
        <tr>
          <td>CLOB</td>
          <td>TEXT</td>
          <td></td>
        </tr>
        <tr>
          <td>DATALINK</td>
          <td><em>IMAGE</em></td>
          <td>Not natively supported by Sybase</td>
        </tr>
        <tr>
          <td>DATE</td>
          <td>DATETIME</td>
          <td></td>
        </tr>
        <tr>
          <td>DECIMAL</td>
          <td>DECIMAL</td>
          <td></td>
        </tr>
        <tr>
          <td>DISTINCT</td>
          <td><em>IMAGE</em></td>
          <td>Not natively supported by Sybase</td>
        </tr>
        <tr>
          <td>DOUBLE</td>
          <td>FLOAT</td>
          <td></td>
        </tr>
        <tr>
          <td>FLOAT</td>
          <td>FLOAT</td>
          <td></td>
        </tr>
        <tr>
          <td>INTEGER</td>
          <td>INT</td>
          <td></td>
        </tr>
        <tr>
          <td>JAVA_OBJECT</td>
          <td><em>IMAGE</em></td>
          <td>Not natively supported by Sybase</td>
        </tr>
        <tr>
          <td>LONGVARBINARY</td>
          <td>BYTEA</td>
          <td></td>
        </tr>
        <tr>
          <td>LONGVARCHAR</td>
          <td>IMAGE</td>
          <td></td>
        </tr>
        <tr>
          <td>NULL</td>
          <td><em>IMAGE</em></td>
          <td>Not natively supported by Sybase</td>
        </tr>
        <tr>
          <td>NUMERIC</td>
          <td>NUMERIC</td>
          <td></td>
        </tr>
        <tr>
          <td>OTHER</td>
          <td><em>IMAGE</em></td>
          <td>Not natively supported by Sybase</td>
        </tr>
        <tr>
          <td>REAL</td>
          <td>REAL</td>
          <td></td>
        </tr>
        <tr>
          <td>REF</td>
          <td><em>IMAGE</em></td>
          <td>Not natively supported by Sybase</td>
        </tr>
        <tr>
          <td>SMALLINT</td>
          <td>SMALLINT</td>
          <td></td>
        </tr>
        <tr>
          <td>STRUCT</td>
          <td><em>IMAGE</em></td>
          <td>Not natively supported by Sybase</td>
        </tr>
        <tr>
          <td>TIME</td>
          <td>DATETIME</td>
          <td></td>
        </tr>
        <tr>
          <td>TIMESTAMP</td>
          <td><em>DATETIME</em></td>
          <td>Not natively supported by Sybase</td>
        </tr>
        <tr>
          <td>TINYINT</td>
          <td><em>SMALLINT</em></td>
          <td>The native <code>TINYINT</code> type only supports values between 0 and 255</td>
        </tr>
        <tr>
          <td>VARBINARY</td>
          <td>VARBINARY</td>
          <td></td>
        </tr>
        <tr>
          <td>VARCHAR</td>
          <td>VARCHAR</td>
          <td></td>
        </tr>
      </table>
    </section>
  </body>
</document>
